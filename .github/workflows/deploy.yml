name: Deploy Caminho da Roça (Self-Hosted)

on:
  push:
    branches:
      - dev   # dispara quando fizer push na branch main

jobs:
  deploy:
    name: Deploy para Servidor
    runs-on: self-hosted   # importante: o runner está dentro da VPN
    environment: Production
    env:
      APP_DEBUG=${{ vars.APP_DEBUG }}
      APP_ENV=${{ vars.APP_ENV }}
      APP_KEY=${{ secrets.APP_KEY }}
      APP_FAKER_LOCALE=${{ vars.APP_FAKER_LOCALE }}
      APP_FALLBACK_LOCALE=${{ vars.APP_FALLBACK_LOCALE }}
      APP_LOCALE=${{ vars.APP_LOCALE }}
      APP_MAINTENANCE_DRIVER=${{ vars.APP_MAINTENANCE_DRIVER }}
      APP_NAME=${{ vars.APP_NAME }}
      APP_URL=${{ vars.APP_URL }}
      BCRYPT_ROUNDS=${{ vars.BCRYPT_ROUNDS }}
      BROADCAST_CONNECTION=${{ vars.BROADCAST_CONNECTION }}
      CACHE_STORE=${{ vars.CACHE_STORE }}
      DB_CONNECTION=${{ vars.DB_CONNECTION }}
      DB_DATABASE=${{ vars.DB_DATABASE }}
      DB_HOST=${{ vars.DB_HOST }}
      DB_PORT=${{ vars.DB_PORT }}
      DB_PASSWORD=${{ secrets.DB_PASSWORD }}
      DB_USERNAME=${{ vars.DB_USERNAME }}
      FILESYSTEM_DISK=${{ vars.FILESYSTEM_DISK }}
      LOG_CHANNEL=${{ vars.LOG_CHANNEL }}
      LOG_DEPRECATIONS_CHANNEL=${{ vars.LOG_DEPRECATIONS_CHANNEL }}
      LOG_LEVEL=${{ vars.LOG_LEVEL }}
      LOG_STACK=${{ vars.LOG_STACK }}
      MAIL_ENCRYPTION=${{ vars.MAIL_ENCRYPTION }}
      MAIL_FROM_ADDRESS=${{ vars.MAIL_FROM_ADDRESS }}
      MAIL_FROM_NAME=${{ vars.MAIL_FROM_NAME }}
      MAIL_HOST=${{ vars.MAIL_HOST }}
      MAIL_MAILER=${{ vars.MAIL_MAILER }}
      MAIL_PORT=${{ vars.MAIL_PORT }}
      MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
      MAIL_USERNAME=${{ vars.MAIL_USERNAME }}
      PHP_CLI_SERVER_WORKERS=${{ vars.PHP_CLI_SERVER_WORKERS }}
      QUEUE_CONNECTION=${{ vars.QUEUE_CONNECTION }}
      SESSION_DOMAIN=${{ vars.SESSION_DOMAIN }}
      SESSION_DRIVER=${{ vars.SESSION_DRIVER }}
      SESSION_ENCRYPT=${{ vars.SESSION_ENCRYPT }}
      SESSION_LIFETIME=${{ vars.SESSION_LIFETIME }}
      SESSION_PATH=${{ vars.SESSION_PATH }}
      VITE_APP_NAME=${{ vars.VITE_APP_NAME }}

    steps:
      - uses: actions/checkout@v4

      - name: Run composer install if composer.json exists
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Exportar todas as variáveis para .env
        run: |
          printenv | grep -v "GITHUB_" | grep -v "RUNNER_" | grep -v "HOME=" | grep -v "PATH=" > .env
          echo ".env gerado com base nas variáveis de ambiente:"
          cat .env

      - name: Atualizar diretório do projeto
        run: |
          # Defina o caminho do projeto no servidor (o runner roda aqui)
          DEPLOY_PATH="/var/www/caminhodaroca-web"

          # Garante que o diretório existe
          sudo mkdir -p $DEPLOY_PATH
          sudo chown -R $USER:$USER $DEPLOY_PATH

          # Copia os arquivos do repositório para o diretório final
          rsync -av --delete --exclude=".git" --exclude="node_modules" ./ $DEPLOY_PATH

      - name: Rodar comandos pós-deploy
        run: |
          cd /var/www/caminhodaroca-web

          mkdir -p storage bootstrap/cache
          # Ajustar permissões
          sudo chown -R www-data:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache
          sudo rm -rf storage/app/public
          sudo ln -s /var/www/storage-data storage/app/public

          # Executar otimizações e migrations
#          cp ../.env .env
          php artisan migrate
          php artisan config:clear
          php artisan cache:clear
          php artisan storage:link
#          php artisan config:cache
#          php artisan route:cache

      - name: Finalizar
        run: echo "Deploy concluído com sucesso!"
