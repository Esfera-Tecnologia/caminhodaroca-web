name: Deploy Caminho da Roça (Self-Hosted)

on:
  push:
    branches:
      - dev   # dispara quando fizer push na branch main

jobs:
  deploy:
    name: Deploy para Servidor
    runs-on: self-hosted   # importante: o runner está dentro da VPN
    environment: Production
    env:
      LARAVEL_VARS_APP_DEBUG: "${{ vars.APP_DEBUG }}"
      LARAVEL_VARS_APP_ENV: "${{ vars.APP_ENV }}"
      LARAVEL_VARS_APP_KEY: "${{ secrets.APP_KEY }}"
      LARAVEL_VARS_APP_FAKER_LOCALE: "${{ vars.APP_FAKER_LOCALE }}"
      LARAVEL_VARS_APP_FALLBACK_LOCALE: "${{ vars.APP_FALLBACK_LOCALE }}"
      LARAVEL_VARS_APP_LOCALE: "${{ vars.APP_LOCALE }}"
      LARAVEL_VARS_APP_MAINTENANCE_DRIVER: "${{ vars.APP_MAINTENANCE_DRIVER }}"
      LARAVEL_VARS_APP_NAME: "${{ vars.APP_NAME }}"
      LARAVEL_VARS_APP_URL: "${{ vars.APP_URL }}"
      LARAVEL_VARS_BCRYPT_ROUNDS: "${{ vars.BCRYPT_ROUNDS }}"
      LARAVEL_VARS_BROADCAST_CONNECTION: "${{ vars.BROADCAST_CONNECTION }}"
      LARAVEL_VARS_CACHE_STORE: "${{ vars.CACHE_STORE }}"
      LARAVEL_VARS_DB_CONNECTION: "${{ vars.DB_CONNECTION }}"
      LARAVEL_VARS_DB_DATABASE: "${{ vars.DB_DATABASE }}"
      LARAVEL_VARS_DB_HOST: "${{ vars.DB_HOST }}"
      LARAVEL_VARS_DB_PORT: "${{ vars.DB_PORT }}"
      LARAVEL_VARS_DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
      LARAVEL_VARS_DB_USERNAME: "${{ vars.DB_USERNAME }}"
      LARAVEL_VARS_FILESYSTEM_DISK: "${{ vars.FILESYSTEM_DISK }}"
      LARAVEL_VARS_LOG_CHANNEL: "${{ vars.LOG_CHANNEL }}"
      LARAVEL_VARS_LOG_DEPRECATIONS_CHANNEL: "${{ vars.LOG_DEPRECATIONS_CHANNEL }}"
      LARAVEL_VARS_LOG_LEVEL: "${{ vars.LOG_LEVEL }}"
      LARAVEL_VARS_LOG_STACK: "${{ vars.LOG_STACK }}"
      LARAVEL_VARS_MAIL_ENCRYPTION: "${{ vars.MAIL_ENCRYPTION }}"
      LARAVEL_VARS_MAIL_FROM_ADDRESS: "${{ vars.MAIL_FROM_ADDRESS }}"
      LARAVEL_VARS_MAIL_FROM_NAME: "${{ vars.MAIL_FROM_NAME }}"
      LARAVEL_VARS_MAIL_HOST: "${{ vars.MAIL_HOST }}"
      LARAVEL_VARS_MAIL_MAILER: "${{ vars.MAIL_MAILER }}"
      LARAVEL_VARS_MAIL_PORT: "${{ vars.MAIL_PORT }}"
      LARAVEL_VARS_MAIL_PASSWORD: "${{ secrets.MAIL_PASSWORD }}"
      LARAVEL_VARS_MAIL_USERNAME: "${{ vars.MAIL_USERNAME }}"
      LARAVEL_VARS_PHP_CLI_SERVER_WORKERS: "${{ vars.PHP_CLI_SERVER_WORKERS }}"
      LARAVEL_VARS_QUEUE_CONNECTION: "${{ vars.QUEUE_CONNECTION }}"
      LARAVEL_VARS_SESSION_DOMAIN: "${{ vars.SESSION_DOMAIN }}"
      LARAVEL_VARS_SESSION_DRIVER: "${{ vars.SESSION_DRIVER }}"
      LARAVEL_VARS_SESSION_ENCRYPT: "${{ vars.SESSION_ENCRYPT }}"
      LARAVEL_VARS_SESSION_LIFETIME: "${{ vars.SESSION_LIFETIME }}"
      LARAVEL_VARS_SESSION_PATH: "${{ vars.SESSION_PATH }}"
      LARAVEL_VARS_VITE_APP_NAME: "${{ vars.VITE_APP_NAME }}"

    steps:
      - uses: actions/checkout@v4

      - name: Run composer install if composer.json exists
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Exportar todas as variáveis para .env
        run: |
          printenv \
            | grep "^LARAVEL_VARS_" \
            | awk -F= '{
            key = substr($1, length("LARAVEL_VARS_")+1);
            val = substr($0, index($0, $2));
            printf "%s=\"%s\"\n", key, val
          }' > .env

          echo ".env gerado com base nas variáveis de ambiente:"
          cat .env

      - name: Atualizar diretório do projeto
        run: |
          # Defina o caminho do projeto no servidor (o runner roda aqui)
          DEPLOY_PATH="/var/www/caminhodaroca-web"

          # Garante que o diretório existe
          sudo mkdir -p $DEPLOY_PATH
          sudo chown -R $USER:$USER $DEPLOY_PATH

          # Copia os arquivos do repositório para o diretório final
          rsync -av --delete --exclude=".git" --exclude="node_modules" ./ $DEPLOY_PATH

      - name: Rodar comandos pós-deploy
        run: |
          cd /var/www/caminhodaroca-web

          mkdir -p storage bootstrap/cache
          # Ajustar permissões
          sudo chown -R www-data:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache
          sudo rm -rf storage/app/public
          sudo ln -s /var/www/storage-data storage/app/public

          # Executar otimizações e migrations
          php artisan migrate --force
          php artisan config:clear
          php artisan cache:clear
          php artisan storage:link

      - name: Finalizar
        run: echo "Deploy concluído com sucesso!"
